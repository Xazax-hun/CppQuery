R"(\bctorInitializer\b)" <<
R"(\baccessSpecDecl\b)" <<
R"(\bclassTemplateDecl\b)" <<
R"(\bclassTemplateSpecializationDecl\b)" <<
R"(\bconstructorDecl\b)" <<
R"(\bdecl\b)" <<
R"(\bdeclaratorDecl\b)" <<
R"(\bdestructorDecl\b)" <<
R"(\benumConstantDecl\b)" <<
R"(\benumDecl\b)" <<
R"(\bfieldDecl\b)" <<
R"(\bfriendDecl\b)" <<
R"(\bfunctionDecl\b)" <<
R"(\bfunctionTemplateDecl\b)" <<
R"(\bmethodDecl\b)" <<
R"(\bnamedDecl\b)" <<
R"(\bnamespaceDecl\b)" <<
R"(\bparmVarDecl\b)" <<
R"(\brecordDecl\b)" <<
R"(\bunresolvedUsingValueDecl\b)" <<
R"(\busingDecl\b)" <<
R"(\bvarDecl\b)" <<
R"(\bnestedNameSpecifierLoc\b)" <<
R"(\bnestedNameSpecifier\b)" <<
R"(\bqualType\b)" <<
R"(\barraySubscriptExpr\b)" <<
R"(\basmStmt\b)" <<
R"(\bbinaryOperator\b)" <<
R"(\bbindTemporaryExpr\b)" <<
R"(\bboolLiteral\b)" <<
R"(\bbreakStmt\b)" <<
R"(\bcStyleCastExpr\b)" <<
R"(\bcallExpr\b)" <<
R"(\bcaseStmt\b)" <<
R"(\bcastExpr\b)" <<
R"(\bcatchStmt\b)" <<
R"(\bcharacterLiteral\b)" <<
R"(\bcompoundLiteralExpr\b)" <<
R"(\bcompoundStmt\b)" <<
R"(\bconditionalOperator\b)" <<
R"(\bconstCastExpr\b)" <<
R"(\bconstructExpr\b)" <<
R"(\bcontinueStmt\b)" <<
R"(\bdeclRefExpr\b)" <<
R"(\bdeclStmt\b)" <<
R"(\bdefaultArgExpr\b)" <<
R"(\bdefaultStmt\b)" <<
R"(\bdeleteExpr\b)" <<
R"(\bdoStmt\b)" <<
R"(\bdynamicCastExpr\b)" <<
R"(\bexplicitCastExpr\b)" <<
R"(\bexpr\b)" <<
R"(\bfloatLiteral\b)" <<
R"(\bforRangeStmt\b)" <<
R"(\bforStmt\b)" <<
R"(\bfunctionalCastExpr\b)" <<
R"(\bgotoStmt\b)" <<
R"(\bifStmt\b)" <<
R"(\bimplicitCastExpr\b)" <<
R"(\binitListExpr\b)" <<
R"(\bintegerLiteral\b)" <<
R"(\blabelStmt\b)" <<
R"(\blambdaExpr\b)" <<
R"(\bmaterializeTemporaryExpr\b)" <<
R"(\bmemberCallExpr\b)" <<
R"(\bmemberExpr\b)" <<
R"(\bnewExpr\b)" <<
R"(\bnullPtrLiteralExpr\b)" <<
R"(\bnullStmt\b)" <<
R"(\boperatorCallExpr\b)" <<
R"(\breinterpretCastExpr\b)" <<
R"(\breturnStmt\b)" <<
R"(\bstaticCastExpr\b)" <<
R"(\bstmt\b)" <<
R"(\bstringLiteral\b)" <<
R"(\bswitchCase\b)" <<
R"(\bswitchStmt\b)" <<
R"(\btemporaryObjectExpr\b)" <<
R"(\bthisExpr\b)" <<
R"(\bthrowExpr\b)" <<
R"(\btryStmt\b)" <<
R"(\bunaryExprOrTypeTraitExpr\b)" <<
R"(\bunaryOperator\b)" <<
R"(\bunresolvedConstructExpr\b)" <<
R"(\buserDefinedLiteral\b)" <<
R"(\bwhileStmt\b)" <<
R"(\btypeLoc\b)" <<
R"(\barrayType\b)" <<
R"(\batomicType\b)" <<
R"(\bautoType\b)" <<
R"(\bblockPointerType\b)" <<
R"(\bbuiltinType\b)" <<
R"(\bcomplexType\b)" <<
R"(\bconstantArrayType\b)" <<
R"(\bdependentSizedArrayType\b)" <<
R"(\belaboratedType\b)" <<
R"(\bfunctionType\b)" <<
R"(\bincompleteArrayType\b)" <<
R"(\blValueReferenceType\b)" <<
R"(\bmemberPointerType\b)" <<
R"(\bparenType\b)" <<
R"(\bpointerType\b)" <<
R"(\brValueReferenceType\b)" <<
R"(\brecordType\b)" <<
R"(\breferenceType\b)" <<
R"(\btemplateSpecializationType\b)" <<
R"(\btype\b)" <<
R"(\btypedefType\b)" <<
R"(\bunaryTransformType\b)" <<
R"(\bvariableArrayType\b)" <<
R"(\ballOf\b)" <<
R"(\banyOf\b)" <<
R"(\banything\b)" <<
R"(\bunless\b)" <<
R"(\bhasOperatorName\b)" <<
R"(\bequals\b)" <<
R"(\bargumentCountIs\b)" <<
R"(\bisImplicit\b)" <<
R"(\bisWritten\b)" <<
R"(\bhasOverloadedOperatorName\b)" <<
R"(\bisConst\b)" <<
R"(\bisOverride\b)" <<
R"(\bisVirtual\b)" <<
R"(\bisDerivedFrom\b)" <<
R"(\bStringRef\b)" <<
R"(\bBaseName\b)" <<
R"(\bisExplicitTemplateSpecialization\b)" <<
R"(\bisSameOrDerivedFrom\b)" <<
R"(\bisTemplateInstantiation\b)" <<
R"(\bstatementCountIs\b)" <<
R"(\bhasSize\b)" <<
R"(\bdeclCountIs\b)" <<
R"(\bequalsBoundNode\b)" <<
R"(\bequalsNode\b)" <<
R"(\bisPrivate\b)" <<
R"(\bisProtected\b)" <<
R"(\bisPublic\b)" <<
R"(\bisDefinition\b)" <<
R"(\bisExternC\b)" <<
R"(\bparameterCountIs\b)" <<
R"(\bisArrow\b)" <<
R"(\bhasName\b)" <<
R"(\bmatchesName\b)" <<
R"(\basString\b)" <<
R"(\bhasLocalQualifiers\b)" <<
R"(\bisConstQualified\b)" <<
R"(\bisInteger\b)" <<
R"(\bofKind\b)" <<
R"(\bUnaryExprOrTypeTrait\b)" <<
R"(\bKind\b)" <<
R"(\bstd::string\b)" <<
R"(\bName\b)" <<
R"(\beachOf\b)" <<
R"(\bforEach\b)" <<
R"(\bforEachDescendant\b)" <<
R"(\bhas\b)" <<
R"(\bhasAncestor\b)" <<
R"(\bhasDescendant\b)" <<
R"(\bhasParent\b)" <<
R"(\bhasBase\b)" <<
R"(\bhasIndex\b)" <<
R"(\bhasElementTypeLoc\b)" <<
R"(\bhasElementType\b)" <<
R"(\bhasValueTypeLoc\b)" <<
R"(\bhasValueType\b)" <<
R"(\bhasDeducedType\b)" <<
R"(\bhasEitherOperand\b)" <<
R"(\bhasLHS\b)" <<
R"(\bhasRHS\b)" <<
R"(\bpointeeLoc\b)" <<
R"(\bpointee\b)" <<
R"(\bhasAnyArgument\b)" <<
R"(\bhasArgument\b)" <<
R"(\bunsigned\b)" <<
R"(\bN,\b)" <<
R"(\bhasDeclaration\b)" <<
R"(\bforEachConstructorInitializer\b)" <<
R"(\bhasAnyConstructorInitializer\b)" <<
R"(\bforField\b)" <<
R"(\bwithInitializer\b)" <<
R"(\bon\b)" <<
R"(\bonImplicitObjectArgument\b)" <<
R"(\bthisPointerType\b)" <<
R"(\bofClass\b)" <<
R"(\bhasMethod\b)" <<
R"(\bcallee\b)" <<
R"(\bhasCaseConstant\b)" <<
R"(\bhasSourceExpression\b)" <<
R"(\bhasAnyTemplateArgument\b)" <<
R"(\bhasTemplateArgument\b)" <<
R"(\bhasAnySubstatement\b)" <<
R"(\bhasCondition\b)" <<
R"(\bhasFalseExpression\b)" <<
R"(\bhasTrueExpression\b)" <<
R"(\bthroughUsingDecl\b)" <<
R"(\bto\b)" <<
R"(\bcontainsDeclaration\b)" <<
R"(\bhasSingleDecl\b)" <<
R"(\bhasTypeLoc\b)" <<
R"(\bhasDeclContext\b)" <<
R"(\bhasBody\b)" <<
R"(\bhasQualifier\b)" <<
R"(\bnamesType\b)" <<
R"(\bhasDestinationType\b)" <<
R"(\bhasType\b)" <<
R"(\bignoringImpCasts\b)" <<
R"(\bignoringParenCasts\b)" <<
R"(\bignoringParenImpCasts\b)" <<
R"(\bhasIncrement\b)" <<
R"(\bhasLoopInit\b)" <<
R"(\bhasAnyParameter\b)" <<
R"(\bhasParameter\b)" <<
R"(\breturns\b)" <<
R"(\bhasConditionVariableStatement\b)" <<
R"(\bhasImplicitDestinationType\b)" <<
R"(\bhasObjectExpression\b)" <<
R"(\bmember\b)" <<
R"(\bhasPrefix\b)" <<
R"(\bloc\b)" <<
R"(\bspecifiesTypeLoc\b)" <<
R"(\bspecifiesNamespace\b)" <<
R"(\bspecifiesType\b)" <<
R"(\binnerType\b)" <<
R"(\bhasCanonicalType\b)" <<
R"(\bpointsTo\b)" <<
R"(\breferences\b)" <<
R"(\balignOfExpr\b)" <<
R"(\bsizeOfExpr\b)" <<
R"(\bforEachSwitchCase\b)" <<
R"(\brefersToDeclaration\b)" <<
R"(\brefersToType\b)" <<
R"(\bfindAll\b)" <<
R"(\bhasArgumentOfType\b)" <<
R"(\bhasUnaryOperand\b)" <<
R"(\bhasAnyUsingShadowDecl\b)" <<
R"(\bhasTargetDecl\b)" <<
R"(\bhasInitializer\b)" <<
R"(\bhasSizeExpr\b)" <<
R"(\bbind\b)"